
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Clase creada para generar una interfaz grafica de un editor con diferentes funciones 
 * @author marvi
 */
public class VentanaEditor extends javax.swing.JFrame {

    /**
     * Creates new form VentanaEditor
     */
    public static File archivoinput,archivooutput;
    public static String nombrer,nombre;
    public VentanaEditor() {
        initComponents();
       this.setLocationRelativeTo(null);
      this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        op4 = new javax.swing.JRadioButton();
        op2 = new javax.swing.JRadioButton();
        op3 = new javax.swing.JRadioButton();
        op1 = new javax.swing.JRadioButton();
        op5 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        rutaIMG = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editor");

        jPanel1.setBackground(new java.awt.Color(0, 0, 51));

        jButton1.setFont(new java.awt.Font("Agency FB", 0, 36)); // NOI18N
        jButton1.setText("Agregar Imagen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        op4.setFont(new java.awt.Font("Agency FB", 0, 25)); // NOI18N
        op4.setForeground(new java.awt.Color(255, 255, 255));
        op4.setText("Modificar Imagen");
        op4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        op2.setFont(new java.awt.Font("Agency FB", 0, 25)); // NOI18N
        op2.setForeground(new java.awt.Color(255, 255, 255));
        op2.setText("Copia JPEG");
        op2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        op3.setFont(new java.awt.Font("Agency FB", 0, 25)); // NOI18N
        op3.setForeground(new java.awt.Color(255, 255, 255));
        op3.setText("Rojo Verde Azul Sepia");
        op3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        op1.setFont(new java.awt.Font("Agency FB", 0, 25)); // NOI18N
        op1.setForeground(new java.awt.Color(255, 255, 255));
        op1.setText("JPEG a BMP y viceversa");
        op1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        op1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op1ActionPerformed(evt);
            }
        });

        op5.setFont(new java.awt.Font("Agency FB", 0, 25)); // NOI18N
        op5.setForeground(new java.awt.Color(255, 255, 255));
        op5.setText("Blanco y Negro");
        op5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton2.setFont(new java.awt.Font("Agency FB", 0, 25)); // NOI18N
        jButton2.setText("Ejecutar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        rutaIMG.setFont(new java.awt.Font("Agency FB", 0, 20)); // NOI18N
        rutaIMG.setForeground(new java.awt.Color(0, 0, 0));
        rutaIMG.setEnabled(false);
        rutaIMG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rutaIMGActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(rutaIMG, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 289, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(op1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(op4, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(op2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(op3, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(op5, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(765, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rutaIMG, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(op1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(op2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(op3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(op4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(op5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int res;
        buscarimg buscador = new buscarimg();
       FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG Y BMP","jpg","jpeg","bmp");
       buscador.choser.setFileFilter(filtro);
       res = buscador.choser.showOpenDialog(null);
       if(JFileChooser.APPROVE_OPTION==res){
           archivoinput = buscador.choser.getSelectedFile();
            nombre = archivoinput.getName();
            nombre = nombre.substring(0, nombre.lastIndexOf(".")+1);
           rutaIMG.setText(archivoinput.getAbsolutePath());
           nombrer = rutaIMG.getText();
          
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void op1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_op1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
     if(!"".equals(rutaIMG.getText())){
         if(op1.isSelected()){
            String temp = getExtension(nombrer);
          
            if("jpg".equals(temp) ||"JPG".equals(temp)||"JPEG".equals(temp)||"jpeg".equals(temp)){
            JPEGtoBMPImage prueba = new JPEGtoBMPImage(rutaIMG.getText());
            
            try {
                prueba.readFile();
            } catch (Exception ex) {
                Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                prueba.generateFiles();
            } catch (Exception ex) {
                Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
            }
                try {
                    JPEGHandler.runHandler(prueba);
                } catch (Exception ex) {
                    Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if("bmp".equals(temp) ||"BMP".equals(temp)){
            BMPtoJPEGImage prueba = new BMPtoJPEGImage(rutaIMG.getText());
            try {
                prueba.readFile();
            } catch (Exception ex) {
                Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                prueba.generateFiles();
            } catch (Exception ex) {
                Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
            }   try {
                JPEGHandler.runHandler(prueba);
                } catch (Exception ex) {
                    Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null, "No ha selecciondo imagenes de extension JPG, BMP O JPEG");
            }
        }if (op2.isSelected()){
            String temp = getExtension(nombrer);
            if("jpg".equals(temp) ||"JPG".equals(temp)||"JPEG".equals(temp)||"jpeg".equals(temp)){
            JPEGImageCopy prueba = new JPEGImageCopy(rutaIMG.getText());
            try {
                prueba.readFile();
            } catch (Exception ex) {
                Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                prueba.generateFiles();
            } catch (Exception ex) {
                Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
            }   try {
                JPEGHandler.runHandler(prueba);
                } catch (Exception ex) {
                    Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null, "No se puede realizar copia JPG porque el archivo seleccionado no es JPG");
            }
        }if (op3.isSelected()){
            String temp = getExtension(nombrer);
            if("jpg".equals(temp) ||"JPG".equals(temp)||"JPEG".equals(temp)||"jpeg".equals(temp)){
            JPEGImageHandlerColors prueba = new JPEGImageHandlerColors(rutaIMG.getText());
            try {
                prueba.readFile();
            } catch (Exception ex) {
                Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                prueba.generateFiles();
            } catch (Exception ex) {
                Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
            }   try {
                JPEGHandler.runHandler(prueba);
                } catch (Exception ex) {
                    Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null, "No se puede realizar imagenes de colores y sepia porque el archivo seleccionado no es JPG");
            }  
        }if (op4.isSelected()){
            String temp = getExtension(nombrer);
            if("jpg".equals(temp) ||"JPG".equals(temp)||"JPEG".equals(temp)||"jpeg".equals(temp)){
            JPEGImageHandlerRotator prueba = new JPEGImageHandlerRotator(rutaIMG.getText());
            try {
                prueba.readFile();
            } catch (Exception ex) {
                Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                prueba.generateFiles();
            } catch (Exception ex) {
                Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
            }   try {
                JPEGHandler.runHandler(prueba);
                } catch (Exception ex) {
                    Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null, "No se pueden rotar imagenes porque el archivo seleccionado no es JPG");
            } 
        }
        if (op5.isSelected()){
            String temp = getExtension(nombrer);
            if("jpg".equals(temp) ||"JPG".equals(temp)||"JPEG".equals(temp)||"jpeg".equals(temp)){
            JPEGImageHandlerBN prueba = new JPEGImageHandlerBN(rutaIMG.getText());
            try {
                prueba.readFile();
            } catch (Exception ex) {
                Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                prueba.generateFiles();
            } catch (Exception ex) {
                Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
            }   try {
                JPEGHandler.runHandler(prueba);
                } catch (Exception ex) {
                    Logger.getLogger(VentanaEditor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null, "No se puede realizar imagenes a blanco y negro porque el archivo seleccionado");
            }
             
        }
          
     }else if ("".equals(rutaIMG.getText())){
         JOptionPane.showMessageDialog(null, "Seleccione una imagen para realizar operaciones");
     }
        
            
    }//GEN-LAST:event_jButton2ActionPerformed

    private void rutaIMGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rutaIMGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rutaIMGActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaEditor().setVisible(true);
            }
        });
    }
    public static String getExtension(String filename) {
            int index = filename.lastIndexOf('.');
            if (index == -1) {
                  return "";
            } else {
                  return filename.substring(index + 1);
            }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    public static javax.swing.JButton jButton2;
    public javax.swing.JPanel jPanel1;
    public static javax.swing.JRadioButton op1;
    public static javax.swing.JRadioButton op2;
    public static javax.swing.JRadioButton op3;
    public static javax.swing.JRadioButton op4;
    public static javax.swing.JRadioButton op5;
    public static javax.swing.JTextField rutaIMG;
    // End of variables declaration//GEN-END:variables
}
